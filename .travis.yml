# NB: don't set `language: haskell` here
language: c

# See also https://github.com/hvr/multi-ghc-travis for more information

env:
 - CABALVER=1.16 GHCVER=7.4.2  AESONVER=0.6.2.1
 - CABALVER=1.16 GHCVER=7.4.2  AESONVER=0.7.0.6
 - CABALVER=1.16 GHCVER=7.4.2  AESONVER=0.8.0.2
 - CABALVER=1.18 GHCVER=7.8.4  AESONVER=0.6.2.1
 - CABALVER=1.18 GHCVER=7.8.4  AESONVER=0.7.0.6
 - CABALVER=1.18 GHCVER=7.8.4  AESONVER=0.8.0.2
 - CABALVER=1.22 GHCVER=7.10.1 AESONVER=0.8.0.2

# Note: the distinction between `before_install` and `install` is not
#       important.
before_install:
 - "echo \"constraints: aeson==$AESONVER\" > cabal.config"
 - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
 - travis_retry sudo apt-get update
 - travis_retry sudo apt-get install cabal-install-$CABALVER ghc-$GHCVER
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - travis_retry cabal update
 - cabal install --only-dependencies --enable-tests

# Here starts the actual work to be performed for the package under
# test; any command which exits with a non-zero exit code causes the
# build to fail.
script:
 # -v2 provides useful information for debugging
 - cabal configure --enable-tests -v2

 # this builds all libraries and executables, including tests
 - cabal build

 - cabal test
 - cabal check

 # tests that a source-distribution can be generated
 - cabal sdist

 # check that the generated source-distribution can be built & installed
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
